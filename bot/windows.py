from aiogram import F
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.kbd import Button
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import TextInput

from states import MainDialog
from logik import max_call_success, min_call_success, call_getter

start_window = Window(
    Const('''–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –∏ –±–∂—É.
    \n–¢—ã –º–æ–∂–µ—à—å –≤ –º–µ–Ω—è –¥–æ–±–∞–≤–ª—è—Ç—å –µ–¥—É, —Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª—å–∫–æ —Ç—ã —Å—ä–µ–ª –∑–∞ 1 –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é, –º–µ—Å—è—Ü
    \n–ï—â–µ —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å –¥–ª—è —Å–µ–±—è –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç,
    \n–±–æ—Ç –Ω–µ –¥–∞—Å—Ç —Ç–µ–±–µ —Å—ä–µ—Å—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ –º–µ–Ω—å—à–µ –ø–æ–ª–æ–∂–µ–Ω–æ–≥–æ
    \n–ù–∞–∂–º–∏ /menu —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª'''),

    Button(Const("–í –º–µ–Ω—é"), id="menu",
           on_click=lambda c, b, d: d.switch_to(MainDialog.menu)),

    state=MainDialog.start
)

menu_window = Window(
    Const("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"),
    Button(Const("–ó–∞–¥–∞—Ç—å –ª–∏–º–∏—Ç –∫–∞–ª–æ—Ä–∏–π"), id="call_limit",
           on_click=lambda c, b, d: d.switch_to(MainDialog.edit_call_limit)),
    Button(Const("–î–æ–±–∞–≤–∏—Ç—å –µ–¥—É"), id="add_food",
           on_click=lambda c, b, d: d.switch_to(MainDialog.menu)),
    Button(Const("–ü–æ–µ—Å—Ç—å"), id="eat",
           on_click=lambda c, b, d: d.switch_to(MainDialog.menu)),
    state=MainDialog.menu
)

call_limit_window = Window(
    Const("–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç:\n"),

    Format("–í–∞—à –º–∞–∫—Å. –ª–∏–º–∏—Ç: {max_call}", when=F["max_call"]),
    Format("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –º–∞–∫—Å. –ª–∏–º–∏—Ç", when=~F["max_call"]),
    Format("–í–∞—à –º–∏–Ω. –ª–∏–º–∏—Ç: {min_call}", when=F["min_call"]),
    Format("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –º–∏–Ω. –ª–∏–º–∏—Ç", when=~F["min_call"]),

    Button(Const("–ó–∞–¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç"), id="max_call",
           on_click=lambda c, b, d: d.switch_to(MainDialog.add_max_call)),
    Button(Const("–ó–∞–¥–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç"), id="min_call",
           on_click=lambda c, b, d: d.switch_to(MainDialog.add_min_call)),
    Button(Const("üîô –ù–∞–∑–∞–¥"), id="back",
           on_click=lambda c, b, d: d.switch_to(MainDialog.menu)),

    state=MainDialog.edit_call_limit,
    getter=call_getter
)

add_max_call_window = Window(
    Const("–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –º–∞–∫—Å. –ª–∏–º–∏—Ç –∫–∞–ª–æ—Ä–∏–π:\n"),

    Format("–í–∞—à –º–∞–∫—Å. –ª–∏–º–∏—Ç: {max_call}", when=F["max_call"]),
    Format("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –º–∞–∫—Å. –ª–∏–º–∏—Ç", when=~F["max_call"]),
    TextInput(
        id='max_call_input',
        on_success=max_call_success,
    ),
    Button(Const("üîô –ù–∞–∑–∞–¥"), id="back",
           on_click=lambda c, b, d: d.switch_to(MainDialog.edit_call_limit)),

    state=MainDialog.add_max_call,
    getter=call_getter
)

add_min_call_window = Window(
    Const("–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –º–∏–Ω. –ª–∏–º–∏—Ç –∫–∞–ª–æ—Ä–∏–π:\n"),

    Format("–í–∞—à –º–∏–Ω. –ª–∏–º–∏—Ç: {min_call}", when=F["min_call"]),
    Format("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –º–∏–Ω. –ª–∏–º–∏—Ç", when=~F["min_call"]),

    TextInput(
        id='min_call_input',
        on_success=min_call_success,
    ),
    Button(Const("üîô –ù–∞–∑–∞–¥"), id="back",
           on_click=lambda c, b, d: d.switch_to(MainDialog.edit_call_limit)),

    state=MainDialog.add_min_call,
    getter=call_getter
)

main_dialog = Dialog(
    start_window,
    menu_window,
    call_limit_window,
    add_max_call_window,
    add_min_call_window,
)
